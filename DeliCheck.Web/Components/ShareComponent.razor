@implements IAsyncDisposable

<RadzenButton Icon="share" class="rz-mt-3 my-button rz-w-100" Click=@ShareContent Text="Поделиться"></RadzenButton>

@code {
    private Lazy<Task<IJSObjectReference>> _moduleTask = null!;

    [Inject]
    public IJSRuntime JSRuntime { get; set; } = null!;

    [Parameter] public string Text { get; set; } = null!;
    [Parameter] public string Url { get; set; } = null!;
    [Parameter] public string Title { get; set; } = null!;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _moduleTask = new Lazy<Task<IJSObjectReference>>(() => JSRuntime.InvokeAsync<IJSObjectReference>(
            "import", "./_content/DeliCheck.Web/Components/ShareComponent.razor.js").AsTask());
    }
    private async Task ShareContent()
    {
        IJSObjectReference module = await _moduleTask.Value;
        await module.InvokeVoidAsync("ShareComponent.share", Title, Text, Url);
    }
    public async ValueTask DisposeAsync()
    {
        if (_moduleTask.IsValueCreated)
        {
            IJSObjectReference module = await _moduleTask.Value;
            await module.DisposeAsync();
        }
    }
}
